//file:noinspection all

plugins {
  id "fabric-loom" version "0.10-SNAPSHOT"
  id "maven-publish"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
group = project.maven_group

version = System.env.GITHUB_ACTIONS == "true"
        ? "${project.mod_version}+build.${System.env.GITHUB_RUN_NUMBER}"
        : project.mod_version

repositories {
  maven {
    name = "Jitpack"
    url  = "https://jitpack.io/"
  }

  maven {
    name = "Quilt Maven"
    url  = "https://maven.quiltmc.org/repository/release/"
  }

  maven {
    name = "Terraformers Maven"
    url  = "https://maven.terraformersmc.com/releases/"
  }
  maven {
    name = "Terraformers Backup Maven"
    url  = "https://maven.terraformersmc.com/releases/"
  }

  maven {
    name = "Shadew's Maven"
    url  = "https://maven.shadew.net/"
  }

  maven {
    name = "Gegy's Maven"
    url  = "https://maven.gegy.dev/"
  }

  maven {
    name = "Ladysnake Mods"
    url = "https://ladysnake.jfrog.io/artifactory/mods/"
  }

  maven {
    name = "Shedaniel"
    url = "https://maven.shedaniel.me"
  }
}

dependencies {
  // required
  minecraft "com.mojang:minecraft:${project.minecraft_version}"
  mappings "net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_build}:v2"
  modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

  // dependencies
  modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

  modImplementation "com.terraformersmc:modmenu:${project.mod_menu_version}"

  String cardinalComponents = "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-%s:${project.cardinal_version}"
  modImplementation cardinalComponents.formatted("base")
  modImplementation cardinalComponents.formatted("entity")

  modApi "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"
  modApi "me.shedaniel.cloth:basic-math:+"
}

loom {
  accessWidenerPath = file("src/main/resources/${project.mod_id}.accesswidener")

  runs {
    data {
      server()

      vmArgs(
              "-D${project.mod_id}.datagen=true",
              "-D${project.mod_id}.datagen.path=\"${project.file("src/generated/resources")};${project.file("$buildDir/resources/main")}\""
      )
    }
  }
}

processResources {
  inputs.property "version", project.version

  filesMatching("fabric.mod.json") {
    expand "version": project.version
  }
}

sourceSets.main.resources {
  srcDirs += "$projectDir/src/generated/resources"
}

tasks.withType(JavaCompile).configureEach {
  it.options.release = 17
}

jar {
  from("LICENSE") {
    rename { "${it}_${project.archivesBaseName}"}
  }
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
    }
  }

  repositories {}
}
